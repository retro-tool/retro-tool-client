version: 2.1

orbs:
  slack: circleci/slack@3.4.2

workflows:
  version: 2

  test-and-build:
    jobs:
      - test
      - build:
          context: docker-login
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - notify_build:
          requires:
            - build

jobs:
  test:
    working_directory: ~/app
    docker:
      - image: circleci/node:13
      - image: postgres:12-alpine
        environment:
          POSTGRES_DB: xrt_test
          POSTGRES_PASSWORD: postgres
      - image: retrotool/api:latest
        environment:
          SECRET_KEY_BASE: d4EfFMlODxDJgUtdMad7BzW6lChp7NJiBlFthgaRH3s5/PWIpebJ5NepcyMGp6gH
          SECRET_SALT: E17CDB72F827ABD91543B2167D855
          DASHBOARD_USER: admin
          DASHBOARD_PASSWORD: admin
          DASHBOARD_REALM: dashboard
          DB_HOST: localhost
          DB_NAME: xrt_test
          DB_USER: postgres
          DB_PASSWORD: postgres
          MIX_ENV: test
    steps:
      - checkout
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: dockerize -wait tcp://localhost:4000 -timeout 1m
      - run: yarn
      - run: yarn test --passWithNoTests

  build:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t retrotool/client:$CIRCLE_SHA1 -t retrotool/client:latest .
      - run:
          name: Login to DockerHub
          command: docker login -u="$DOCKER_USER" -p="$DOCKER_PASSWORD"
      - run:
          name: Push commit image to DockerHub
          command: docker push retrotool/client:$CIRCLE_SHA1
      - run:
          name: Push latest image to DockerHub
          command: docker push retrotool/client:latest
  notify_build:
    docker:
      - image: circleci/node:latest
    steps:
      - slack/notify:
          message: ":rocket: Docker image built -> retrotool/client:latest"
